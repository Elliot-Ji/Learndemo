参考笔记: https://shimo.im/docs/68cd6h3TwygPwx8W/read

1.用位运算实现 + - * /
     1.1 实现 +
            前置知识:理解
                       与运算(&)就是两个都为1才为1,结果才为1
                       或运算(|) 就是两个位都是0时,结果才为0
                       异或运算(^)就是无进位的相加(又或者 两个位相同为0,不同为1)
                       取反运算(~)就是 0变1,1变0
            int a = 46; int b = 20 --> a + b = (a ^ b) + (1 << (a & b))
            a ^ b =
            (1 << (a & b)) =
     1.2 实现 -
            a - b = a + (-b)
            -b = ~b + 1
     1.3 实现 *

2.常数操作

3.时间复杂度

算法题目:
  1.链表相关
       (1).一个链表,找到倒数第K个节点
               思路: 双指针法
               首先一个指针移动K-1位（这里可以根据你的初始化指针决定），然后另一个指针开始启动，
               他俩移动速度一样，所以他俩始终相差K-1位，当第一个指针到达链表尾部时，第二个指针的指向则为倒数第K个节点。
           https://mp.weixin.qq.com/s?__biz=Mzg3Mzc0NjUzMQ==&mid=2247497046&idx=1&sn=8b8866933c2606801df4ed12c5025ef0&source=41#wechat_redirect
       (2).一个链表,返回链表的中间节点

基础知识:
1).并查集-->https://www.bilibili.com/video/BV1M44y1n78z?p=15&vd_source=b5f8254ef4878b9fdd7d9b9213accf9d










































